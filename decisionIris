import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load dataset
data = pd.read_csv('Iris - Iris.csv')
x = data.iloc[:, 1:5].values
y = LabelEncoder().fit_transform(data['Species'])

# Split data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)

# Train Decision Tree model
model = DecisionTreeClassifier(criterion='entropy', random_state=0)
model.fit(x_train, y_train)

# Predict on test data
y_pred = model.predict(x_test)

# Print accuracy and classification report
print(f"\nAccuracy: {accuracy_score(y_test, y_pred) * 100:.2f}%")
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Confusion Matrix Visualization
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, cmap='Blues', fmt='d')
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

# Decision Tree Visualization
plt.figure(figsize=(12, 8))
plot_tree(model, feature_names=data.columns[1:5], class_names=data['Species'].unique(), filled=True)
plt.title("Decision Tree")
plt.show()
